
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ASSIGN BEGIN COLON COMMA CONST DIVIDE DOT ELSE END EQUAL EXNOT FUNCTION GREATER ID IF INTEGER LBRACKETS LESS LPAREN MINUS NUMERO OF PLUS RBRACKETS READ REAL RECORD RPAREN SEMICOLON THEN TIMES TYPE VAR VSTRING WHILE WRITEPROGRAMA : DECLARACOES PRINCIPALPRINCIPAL : BEGIN COMANDO LISTA_COM ENDDECLARACOES : DEF_CONST DEF_TIPOS DEF_VAR DEF_FUNCDEF_CONST : CONSTANTE DEF_CONST\n                 | emptyDEF_TIPOS : TIPO DEF_TIPOS\n                 | emptyDEF_VAR : VARIAVEL DEF_VAR\n               | emptyDEF_FUNC : FUNCAO DEF_FUNC\n                | emptyCONSTANTE : CONST ID EQUAL CONST_VALOR SEMICOLONCONST_VALOR : VSTRING\n                   | EXP_MATTIPO : TYPE ID EQUAL TIPO_DADO SEMICOLONVARIAVEL : VAR ID LISTA_ID COLON TIPO_DADO SEMICOLONLISTA_ID : COMMA ID LISTA_ID\n                | emptyCAMPOS : ID COLON TIPO_DADO LISTA_CAMPOSLISTA_CAMPOS : SEMICOLON CAMPOS LISTA_CAMPOS\n                    | emptyTIPO_DADO : INTEGER\n                 | REAL\n                 | ARRAY LBRACKETS NUMERO RBRACKETS OF TIPO_DADO\n                 | RECORD CAMPOS END\n                 | IDFUNCAO : FUNCTION NOME_FUNCAO BLOCO_FUNCAONOME_FUNCAO : ID PARAM_FUNC COLON TIPO_DADOPARAM_FUNC : LPAREN CAMPOS RPAREN\n                  | emptyBLOCO_FUNCAO : DEF_VAR BEGIN COMANDO LISTA_COM ENDLISTA_COM : SEMICOLON COMANDO LISTA_COM\n                 | emptyBLOCO : BEGIN COMANDO LISTA_COM END\n             | COMANDOCOMANDO : ID NOME ASSIGN EXP_MAT\n               | WHILE EXP_LOGICA BLOCO\n               | IF EXP_LOGICA THEN BLOCO SIN_ELSE\n               | WRITE CONST_VALOR\n               | READ ID NOMESIN_ELSE : ELSE BLOCO\n            | emptyLISTA_PARAM : PARAMETRO COMMA LISTA_PARAM\n            | PARAMETRO\n            | empty\n    \n    EXP_LOGICA : EXP_MAT OP_LOGICO EXP_LOGICA\n                | EXP_MAT\n               \n    EXP_MAT : PARAMETRO OP_MAT EXP_MAT\n            | PARAMETRO\n    PARAMETRO : ID NOME\n                 | NUMEROOP_LOGICO : GREATER\n                 | LESS\n                 | EQUAL\n                 | EXNOTOP_MAT : PLUS\n              | MINUS\n              | TIMES\n              | DIVIDENOME : DOT ID NOME\n            | LBRACKETS PARAMETRO RBRACKETS\n            | LPAREN LISTA_PARAM RPAREN\n            | emptyempty :'
    
_lr_action_items = {'CONST':([0,4,90,],[6,6,-12,]),'TYPE':([0,3,4,5,10,13,90,108,],[-64,12,-64,-5,12,-4,-12,-15,]),'VAR':([0,3,4,5,9,10,11,13,22,25,79,84,86,87,90,108,123,128,130,139,],[-64,-64,-64,-5,24,-64,-7,-4,24,-6,24,-26,-22,-23,-12,-15,-25,-28,-16,-24,]),'FUNCTION':([0,3,4,5,9,10,11,13,21,22,23,25,47,50,90,101,108,130,138,],[-64,-64,-64,-5,-64,-64,-7,-4,49,-64,-9,-6,49,-8,-12,-27,-15,-16,-31,]),'BEGIN':([0,2,3,4,5,9,10,11,13,21,22,23,25,35,36,37,38,39,40,46,47,48,50,57,75,76,78,79,84,86,87,90,93,94,95,98,99,101,102,108,115,123,128,130,138,139,],[-64,8,-64,-64,-5,-64,-64,-7,-4,-64,-64,-9,-6,-63,63,-47,-49,-64,-51,-3,-64,-11,-8,-64,-50,63,-10,-64,-26,-22,-23,-12,-60,-61,-62,-46,-48,-27,117,-15,63,-25,-28,-16,-31,-24,]),'$end':([1,7,54,],[0,-1,-2,]),'ID':([6,8,12,17,18,19,20,24,27,29,32,33,34,35,36,37,38,39,40,49,52,56,57,63,65,66,67,68,69,70,71,72,73,74,75,76,82,89,93,94,95,96,98,99,104,106,115,117,118,124,134,136,],[14,16,26,39,39,39,45,51,39,16,57,39,39,-63,16,-47,-49,-64,-51,80,84,39,-64,16,39,-52,-53,-54,-55,39,-56,-57,-58,-59,-50,16,107,111,-60,-61,-62,39,-46,-48,111,84,16,16,84,84,84,111,]),'WHILE':([8,29,35,36,37,38,39,40,57,63,75,76,93,94,95,98,99,115,117,],[17,17,-63,17,-47,-49,-64,-51,-64,17,-50,17,-60,-61,-62,-46,-48,17,17,]),'IF':([8,29,35,36,37,38,39,40,57,63,75,76,93,94,95,98,99,115,117,],[18,18,-63,18,-47,-49,-64,-51,-64,18,-50,18,-60,-61,-62,-46,-48,18,18,]),'WRITE':([8,29,35,36,37,38,39,40,57,63,75,76,93,94,95,98,99,115,117,],[19,19,-63,19,-47,-49,-64,-51,-64,19,-50,19,-60,-61,-62,-46,-48,19,19,]),'READ':([8,29,35,36,37,38,39,40,57,63,75,76,93,94,95,98,99,115,117,],[20,20,-63,20,-47,-49,-64,-51,-64,20,-50,20,-60,-61,-62,-46,-48,20,20,]),'EQUAL':([14,26,35,37,38,39,40,57,75,93,94,95,99,],[27,52,-63,68,-49,-64,-51,-64,-50,-60,-61,-62,-48,]),'SEMICOLON':([15,35,38,39,40,42,43,44,45,53,55,57,62,64,75,77,84,85,86,87,92,93,94,95,97,99,100,114,116,120,123,125,126,127,132,135,137,139,140,141,],[29,-63,-49,-64,-51,-39,-13,-14,-64,90,29,-64,-37,-35,-50,-40,-26,108,-22,-23,-36,-60,-61,-62,29,-48,-64,-38,-42,130,-25,-34,-41,29,136,-19,-21,-24,136,-20,]),'END':([15,28,30,35,38,39,40,42,43,44,45,55,57,62,64,75,77,84,86,87,91,92,93,94,95,97,99,100,110,113,114,116,123,125,126,127,132,133,135,137,139,140,141,],[-64,54,-33,-63,-49,-64,-51,-39,-13,-14,-64,-64,-64,-37,-35,-50,-40,-26,-22,-23,-32,-36,-60,-61,-62,-64,-48,-64,123,125,-38,-42,-25,-34,-41,-64,-64,138,-19,-21,-24,-64,-20,]),'DOT':([16,39,45,57,],[32,32,32,32,]),'LBRACKETS':([16,39,45,57,88,],[33,33,33,33,109,]),'LPAREN':([16,39,45,57,80,],[34,34,34,34,104,]),'ASSIGN':([16,31,35,57,93,94,95,],[-64,56,-63,-64,-60,-61,-62,]),'NUMERO':([17,18,19,27,33,34,56,65,66,67,68,69,70,71,72,73,74,96,109,],[40,40,40,40,40,40,40,40,-52,-53,-54,-55,40,-56,-57,-58,-59,40,122,]),'VSTRING':([19,27,],[43,43,]),'RPAREN':([34,35,39,40,57,59,60,61,75,84,86,87,93,94,95,96,112,119,123,132,135,137,139,140,141,],[-64,-63,-64,-51,-64,95,-44,-45,-50,-26,-22,-23,-60,-61,-62,-64,-43,129,-25,-64,-19,-21,-24,-64,-20,]),'PLUS':([35,38,39,40,57,75,93,94,95,],[-63,71,-64,-51,-64,-50,-60,-61,-62,]),'MINUS':([35,38,39,40,57,75,93,94,95,],[-63,72,-64,-51,-64,-50,-60,-61,-62,]),'TIMES':([35,38,39,40,57,75,93,94,95,],[-63,73,-64,-51,-64,-50,-60,-61,-62,]),'DIVIDE':([35,38,39,40,57,75,93,94,95,],[-63,74,-64,-51,-64,-50,-60,-61,-62,]),'GREATER':([35,37,38,39,40,57,75,93,94,95,99,],[-63,66,-49,-64,-51,-64,-50,-60,-61,-62,-48,]),'LESS':([35,37,38,39,40,57,75,93,94,95,99,],[-63,67,-49,-64,-51,-64,-50,-60,-61,-62,-48,]),'EXNOT':([35,37,38,39,40,57,75,93,94,95,99,],[-63,69,-49,-64,-51,-64,-50,-60,-61,-62,-48,]),'THEN':([35,37,38,39,40,41,57,75,93,94,95,98,99,],[-63,-47,-49,-64,-51,76,-64,-50,-60,-61,-62,-46,-48,]),'ELSE':([35,38,39,40,42,43,44,45,57,62,64,75,77,92,93,94,95,99,100,114,116,125,126,],[-63,-49,-64,-51,-39,-13,-14,-64,-64,-37,-35,-50,-40,-36,-60,-61,-62,-48,115,-38,-42,-34,-41,]),'RBRACKETS':([35,39,40,57,58,75,93,94,95,122,],[-63,-64,-51,-64,94,-50,-60,-61,-62,131,]),'COMMA':([35,39,40,51,57,60,75,93,94,95,107,],[-63,-64,-51,82,-64,96,-50,-60,-61,-62,82,]),'COLON':([51,80,81,83,103,105,107,111,121,129,],[-64,-64,106,-18,118,-30,-64,124,-17,-29,]),'INTEGER':([52,106,118,124,134,],[86,86,86,86,86,]),'REAL':([52,106,118,124,134,],[87,87,87,87,87,]),'ARRAY':([52,106,118,124,134,],[88,88,88,88,88,]),'RECORD':([52,106,118,124,134,],[89,89,89,89,89,]),'OF':([131,],[134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'DECLARACOES':([0,],[2,]),'DEF_CONST':([0,4,],[3,13,]),'CONSTANTE':([0,4,],[4,4,]),'empty':([0,3,4,9,10,15,16,21,22,34,39,45,47,51,55,57,79,80,96,97,100,107,127,132,140,],[5,11,5,23,11,30,35,48,23,61,35,35,48,83,30,35,23,105,61,30,116,83,30,137,137,]),'PRINCIPAL':([2,],[7,]),'DEF_TIPOS':([3,10,],[9,25,]),'TIPO':([3,10,],[10,10,]),'COMANDO':([8,29,36,63,76,115,117,],[15,55,64,97,64,64,127,]),'DEF_VAR':([9,22,79,],[21,50,102,]),'VARIAVEL':([9,22,79,],[22,22,22,]),'LISTA_COM':([15,55,97,127,],[28,91,113,133,]),'NOME':([16,39,45,57,],[31,75,77,93,]),'EXP_LOGICA':([17,18,65,],[36,41,98,]),'EXP_MAT':([17,18,19,27,56,65,70,],[37,37,44,44,92,37,99,]),'PARAMETRO':([17,18,19,27,33,34,56,65,70,96,],[38,38,38,38,58,60,38,38,38,60,]),'CONST_VALOR':([19,27,],[42,53,]),'DEF_FUNC':([21,47,],[46,78,]),'FUNCAO':([21,47,],[47,47,]),'LISTA_PARAM':([34,96,],[59,112,]),'BLOCO':([36,76,115,],[62,100,126,]),'OP_LOGICO':([37,],[65,]),'OP_MAT':([38,],[70,]),'NOME_FUNCAO':([49,],[79,]),'LISTA_ID':([51,107,],[81,121,]),'TIPO_DADO':([52,106,118,124,134,],[85,120,128,132,139,]),'BLOCO_FUNCAO':([79,],[101,]),'PARAM_FUNC':([80,],[103,]),'CAMPOS':([89,104,136,],[110,119,140,]),'SIN_ELSE':([100,],[114,]),'LISTA_CAMPOS':([132,140,],[135,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> DECLARACOES PRINCIPAL','PROGRAMA',2,'p_PROGRAMA','comp.py',129),
  ('PRINCIPAL -> BEGIN COMANDO LISTA_COM END','PRINCIPAL',4,'p_PRINCIPAL','comp.py',133),
  ('DECLARACOES -> DEF_CONST DEF_TIPOS DEF_VAR DEF_FUNC','DECLARACOES',4,'p_DECLARACOES','comp.py',137),
  ('DEF_CONST -> CONSTANTE DEF_CONST','DEF_CONST',2,'p_DEF_CONST','comp.py',143),
  ('DEF_CONST -> empty','DEF_CONST',1,'p_DEF_CONST','comp.py',144),
  ('DEF_TIPOS -> TIPO DEF_TIPOS','DEF_TIPOS',2,'p_DEF_TIPOS','comp.py',153),
  ('DEF_TIPOS -> empty','DEF_TIPOS',1,'p_DEF_TIPOS','comp.py',154),
  ('DEF_VAR -> VARIAVEL DEF_VAR','DEF_VAR',2,'p_DEF_VAR','comp.py',163),
  ('DEF_VAR -> empty','DEF_VAR',1,'p_DEF_VAR','comp.py',164),
  ('DEF_FUNC -> FUNCAO DEF_FUNC','DEF_FUNC',2,'p_DEF_FUNC','comp.py',173),
  ('DEF_FUNC -> empty','DEF_FUNC',1,'p_DEF_FUNC','comp.py',174),
  ('CONSTANTE -> CONST ID EQUAL CONST_VALOR SEMICOLON','CONSTANTE',5,'p_CONSTANTE','comp.py',184),
  ('CONST_VALOR -> VSTRING','CONST_VALOR',1,'p_CONST_VALOR','comp.py',188),
  ('CONST_VALOR -> EXP_MAT','CONST_VALOR',1,'p_CONST_VALOR','comp.py',189),
  ('TIPO -> TYPE ID EQUAL TIPO_DADO SEMICOLON','TIPO',5,'p_TIPO','comp.py',193),
  ('VARIAVEL -> VAR ID LISTA_ID COLON TIPO_DADO SEMICOLON','VARIAVEL',6,'p_VARIAVEL','comp.py',197),
  ('LISTA_ID -> COMMA ID LISTA_ID','LISTA_ID',3,'p_LISTA_ID','comp.py',201),
  ('LISTA_ID -> empty','LISTA_ID',1,'p_LISTA_ID','comp.py',202),
  ('CAMPOS -> ID COLON TIPO_DADO LISTA_CAMPOS','CAMPOS',4,'p_CAMPOS','comp.py',212),
  ('LISTA_CAMPOS -> SEMICOLON CAMPOS LISTA_CAMPOS','LISTA_CAMPOS',3,'p_LISTA_CAMPOS','comp.py',216),
  ('LISTA_CAMPOS -> empty','LISTA_CAMPOS',1,'p_LISTA_CAMPOS','comp.py',217),
  ('TIPO_DADO -> INTEGER','TIPO_DADO',1,'p_TIPO_DADO','comp.py',227),
  ('TIPO_DADO -> REAL','TIPO_DADO',1,'p_TIPO_DADO','comp.py',228),
  ('TIPO_DADO -> ARRAY LBRACKETS NUMERO RBRACKETS OF TIPO_DADO','TIPO_DADO',6,'p_TIPO_DADO','comp.py',229),
  ('TIPO_DADO -> RECORD CAMPOS END','TIPO_DADO',3,'p_TIPO_DADO','comp.py',230),
  ('TIPO_DADO -> ID','TIPO_DADO',1,'p_TIPO_DADO','comp.py',231),
  ('FUNCAO -> FUNCTION NOME_FUNCAO BLOCO_FUNCAO','FUNCAO',3,'p_FUNCAO','comp.py',243),
  ('NOME_FUNCAO -> ID PARAM_FUNC COLON TIPO_DADO','NOME_FUNCAO',4,'p_NOME_FUNCAO','comp.py',247),
  ('PARAM_FUNC -> LPAREN CAMPOS RPAREN','PARAM_FUNC',3,'p_PARAM_FUNC','comp.py',251),
  ('PARAM_FUNC -> empty','PARAM_FUNC',1,'p_PARAM_FUNC','comp.py',252),
  ('BLOCO_FUNCAO -> DEF_VAR BEGIN COMANDO LISTA_COM END','BLOCO_FUNCAO',5,'p_BLOCO_FUNCAO','comp.py',261),
  ('LISTA_COM -> SEMICOLON COMANDO LISTA_COM','LISTA_COM',3,'p_LISTA_COM','comp.py',265),
  ('LISTA_COM -> empty','LISTA_COM',1,'p_LISTA_COM','comp.py',266),
  ('BLOCO -> BEGIN COMANDO LISTA_COM END','BLOCO',4,'p_BLOCO','comp.py',275),
  ('BLOCO -> COMANDO','BLOCO',1,'p_BLOCO','comp.py',276),
  ('COMANDO -> ID NOME ASSIGN EXP_MAT','COMANDO',4,'p_COMANDO','comp.py',286),
  ('COMANDO -> WHILE EXP_LOGICA BLOCO','COMANDO',3,'p_COMANDO','comp.py',287),
  ('COMANDO -> IF EXP_LOGICA THEN BLOCO SIN_ELSE','COMANDO',5,'p_COMANDO','comp.py',288),
  ('COMANDO -> WRITE CONST_VALOR','COMANDO',2,'p_COMANDO','comp.py',289),
  ('COMANDO -> READ ID NOME','COMANDO',3,'p_COMANDO','comp.py',290),
  ('SIN_ELSE -> ELSE BLOCO','SIN_ELSE',2,'p_SIN_ELSE','comp.py',303),
  ('SIN_ELSE -> empty','SIN_ELSE',1,'p_SIN_ELSE','comp.py',304),
  ('LISTA_PARAM -> PARAMETRO COMMA LISTA_PARAM','LISTA_PARAM',3,'p_LISTA_PARAM','comp.py',314),
  ('LISTA_PARAM -> PARAMETRO','LISTA_PARAM',1,'p_LISTA_PARAM','comp.py',315),
  ('LISTA_PARAM -> empty','LISTA_PARAM',1,'p_LISTA_PARAM','comp.py',316),
  ('EXP_LOGICA -> EXP_MAT OP_LOGICO EXP_LOGICA','EXP_LOGICA',3,'p_EXP_LOGICA','comp.py',354),
  ('EXP_LOGICA -> EXP_MAT','EXP_LOGICA',1,'p_EXP_LOGICA','comp.py',355),
  ('EXP_MAT -> PARAMETRO OP_MAT EXP_MAT','EXP_MAT',3,'p_EXP_MAT','comp.py',391),
  ('EXP_MAT -> PARAMETRO','EXP_MAT',1,'p_EXP_MAT','comp.py',392),
  ('PARAMETRO -> ID NOME','PARAMETRO',2,'p_PARAMETRO','comp.py',420),
  ('PARAMETRO -> NUMERO','PARAMETRO',1,'p_PARAMETRO','comp.py',421),
  ('OP_LOGICO -> GREATER','OP_LOGICO',1,'p_OP_LOGICO','comp.py',430),
  ('OP_LOGICO -> LESS','OP_LOGICO',1,'p_OP_LOGICO','comp.py',431),
  ('OP_LOGICO -> EQUAL','OP_LOGICO',1,'p_OP_LOGICO','comp.py',432),
  ('OP_LOGICO -> EXNOT','OP_LOGICO',1,'p_OP_LOGICO','comp.py',433),
  ('OP_MAT -> PLUS','OP_MAT',1,'p_OP_MAT','comp.py',440),
  ('OP_MAT -> MINUS','OP_MAT',1,'p_OP_MAT','comp.py',441),
  ('OP_MAT -> TIMES','OP_MAT',1,'p_OP_MAT','comp.py',442),
  ('OP_MAT -> DIVIDE','OP_MAT',1,'p_OP_MAT','comp.py',443),
  ('NOME -> DOT ID NOME','NOME',3,'p_NOME','comp.py',447),
  ('NOME -> LBRACKETS PARAMETRO RBRACKETS','NOME',3,'p_NOME','comp.py',448),
  ('NOME -> LPAREN LISTA_PARAM RPAREN','NOME',3,'p_NOME','comp.py',449),
  ('NOME -> empty','NOME',1,'p_NOME','comp.py',450),
  ('empty -> <empty>','empty',0,'p_empty','comp.py',462),
]
